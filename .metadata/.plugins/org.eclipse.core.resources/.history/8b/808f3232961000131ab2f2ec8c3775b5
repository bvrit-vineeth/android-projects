package com.example.todolistapp;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

public class TodoListDescriptionActivity extends Activity {
	String title, description;
	long id;
	private String fetch_url = "http://sampletodolist.herokuapp.com/deleteTodoListitem/";
	private String KEY_SUCCESS = "Success";
	private String KEY_ERROR = "Error";
	private String toast_msg;
	public String ID_IDENTIFIER = "id";
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_todo_list_description);
		Intent receivedIntent = getIntent();
		TextView title = (TextView)findViewById(R.id.title_text);
		TextView description = (TextView)findViewById(R.id.description_text);
		setTitle(receivedIntent.getStringExtra("title"));
		setDescription(receivedIntent.getStringExtra("description"));
		setID(receivedIntent.getLongExtra("id", -1));
		title.setText(this.title);
		description.setText(this.description);
	}
	
	public void setTitle(String title){
		this.title = title;
	}
	
	public void setDescription(String description){
		this.description = description;
	}
	
	public void setID(long id){
		this.id = id;
	}
	
	public void checkBoxClick(View view) throws UnsupportedEncodingException{
		String postData = "id=" + id;
		//String encodedPostData = URLEncoder.encode(postData, "UTF-8");
		DeleteItemRestCall delobj = new DeleteItemRestCall();
		delobj.execute(fetch_url, postData);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.todo_list_description, menu);
		return true;
	}
	
	private class DeleteItemRestCall extends AsyncTask<String, Void, JSONObject>{
		@Override
		protected JSONObject doInBackground(String... params) {
			try{
				//call function to send HTTP request
				return downloadWebPage(params[0], params[1]);
			}
			catch(IOException e){
				return null;
			}
		} 
		
		@Override
		protected void onPostExecute(JSONObject result) {
			parseJSON(result);
			Intent resultIntent = new Intent();
			resultIntent.putExtra(ID_IDENTIFIER, id);
			setResult(RESULT_OK, resultIntent);
			Toast.makeText(TodoListDescriptionActivity.this, toast_msg, Toast.LENGTH_LONG).show();
			finish();
		}
		
		private JSONObject downloadWebPage(String inputurl, String urlEncodedData) throws IOException{
			InputStream result = null;
			try{
				URL url = new URL(inputurl);
				HttpURLConnection conn = (HttpURLConnection)url.openConnection();
				conn.setReadTimeout(30000);
		        conn.setConnectTimeout(30000);
		        conn.setRequestMethod("POST");
		        conn.setDoInput(true);
		        
		        //Set post data
		        conn.setDoOutput(true);
		        DataOutputStream wr = new DataOutputStream(conn.getOutputStream());
		        wr.writeBytes(urlEncodedData);
		        wr.flush();
		        wr.close();
		        
		        conn.connect();
		        result = conn.getInputStream();
		        return convertInputStreamToJSON(result);
			}
			finally{
				if(result != null){
					result.close();
				}
			}
		}
		
		public JSONObject convertInputStreamToJSON(InputStream input) throws IOException, UnsupportedEncodingException{
			BufferedReader reader = new BufferedReader(new InputStreamReader(input));
			StringBuilder sb = new StringBuilder();
			String line = null;
			JSONObject jsonFormat = null;
			while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
			input.close();
			String jsonString = sb.toString();
			try {
				jsonFormat = new JSONObject(jsonString);
			} catch (JSONException e) {
				e.printStackTrace();
			}
			return jsonFormat;
		}
		
		public void parseJSON(JSONObject input){
			try {
				String msg = input.getString(KEY_SUCCESS);
				if(msg!=null){
					toast_msg = msg;
				}
				else{
					toast_msg = input.getString(KEY_ERROR);
				}
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
	}

}
